.cmp: (f1: File!, f2: File!, shallow := Bool) -> Bool
.cmpfiles: (dir1: PathLike, dir2: PathLike, common: [Str; _], shallow := Bool) -> Bool
.clear_cache!: () => NoneType

.DirCmp = 'dircmp': ClassType
.DirCmp.
    __new__: (cls: ClassType, a: PathLike, b: PathLike, ignore := PathLike or NoneType, hide := PathLike or NoneType) -> .DirCmp
    left: Str
    right: Str
    left_list: [Str; _]
    right_list: [Str; _]
    left_only: [Str; _]
    right_only: [Str; _]
    common: [Str; _]
    common_dirs: [Str; _]
    common_files: [Str; _]
    common_funny: [Str; _]
    same_files: [Str; _]
    diff_files: [Str; _]
    funny_files: [Str; _]
    subdirs: {Str: .DirCmp}
    report!: (self: .DirCmp) => NoneType
    report_full_closure!: (self: .DirCmp) => NoneType
    report_partial_closure!: (self: .DirCmp) => NoneType
