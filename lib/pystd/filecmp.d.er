.cmp: (f1: File!, f2: File!, shallow := Bool) -> Bool
.cmpfiles: (dir1: PathLike, dir2: PathLike, common: [Str; _], shallow := Bool) -> Bool
.clear_cache!: () => NoneType

.DirCmp = 'dircmp': ClassType
.DirCmp.__call__: (a: PathLike, b: PathLike, ignore := PathLike or NoneType, hide := PathLike or NoneType) -> .DirCmp
.DirCmp.left: Str
.DirCmp.right: Str
.DirCmp.left_list: [Str; _]
.DirCmp.right_list: [Str; _]
.DirCmp.left_only: [Str; _]
.DirCmp.right_only: [Str; _]
.DirCmp.common: [Str; _]
.DirCmp.common_dirs: [Str; _]
.DirCmp.common_files: [Str; _]
.DirCmp.common_funny: [Str; _]
.DirCmp.same_files: [Str; _]
.DirCmp.diff_files: [Str; _]
.DirCmp.funny_files: [Str; _]
.DirCmp.subdirs: {Str: .DirCmp}
.DirCmp.report!: (self: .DirCmp) => NoneType
.DirCmp.report_full_closure!: (self: .DirCmp) => NoneType
.DirCmp.report_partial_closure!: (self: .DirCmp) => NoneType
